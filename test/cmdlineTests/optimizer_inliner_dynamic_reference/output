
======= optimizer_inliner_dynamic_reference/input.sol:C =======
EVM assembly:
    /* "optimizer_inliner_dynamic_reference/input.sol":60:367  contract C {... */
  mstore(0x40, 0x80)
  callvalue
  dup1
  iszero
  tag_1
  jumpi
  revert(0x00, 0x00)
tag_1:
  pop
  jump(tag_2)
tag_2:
  dataSize(sub_0)
  dup1
  dataOffset(sub_0)
  0x00
  codecopy
  0x00
  return
stop

sub_0: assembly {
        /* "optimizer_inliner_dynamic_reference/input.sol":60:367  contract C {... */
      mstore(0x40, 0x80)
      callvalue
      dup1
      iszero
      tag_1
      jumpi
      revert(0x00, 0x00)
    tag_1:
      pop
      jumpi(tag_2, lt(calldatasize, 0x04))
      shr(0xe0, calldataload(0x00))
      dup1
      0x0dbe671f
      eq
      tag_3
      jumpi
      dup1
      0xb8c9d365
      eq
      tag_4
      jumpi
      dup1
      0xe2179b8e
      eq
      tag_5
      jumpi
      jump(tag_2)
    tag_2:
      revert(0x00, 0x00)
        /* "optimizer_inliner_dynamic_reference/input.sol":160:215  function a() public pure returns (uint) { return f(); } */
    tag_3:
      tag_6
      tag_7
      jump	// in
    tag_6:
      mload(0x40)
      tag_8
      swap2
      swap1
      tag_9
      jump	// in
    tag_8:
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "optimizer_inliner_dynamic_reference/input.sol":246:305  function h() public view returns (uint) { return x() + 1; } */
    tag_4:
      tag_10
      tag_11
      jump	// in
    tag_10:
      mload(0x40)
      tag_12
      swap2
      swap1
      tag_9
      jump	// in
    tag_12:
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "optimizer_inliner_dynamic_reference/input.sol":125:155  function g() public { x = f; } */
    tag_5:
      tag_13
      tag_14
      jump	// in
    tag_13:
      stop
        /* "optimizer_inliner_dynamic_reference/input.sol":160:215  function a() public pure returns (uint) { return f(); } */
    tag_7:
        /* "optimizer_inliner_dynamic_reference/input.sol":194:198  uint */
      0x00
        /* "optimizer_inliner_dynamic_reference/input.sol":209:212  f() */
      tag_16
        /* "optimizer_inliner_dynamic_reference/input.sol":209:210  f */
      tag_17
        /* "optimizer_inliner_dynamic_reference/input.sol":209:212  f() */
      0xffffffff
      and
      jump	// in
    tag_16:
        /* "optimizer_inliner_dynamic_reference/input.sol":202:212  return f() */
      swap1
      pop
      jump(tag_15)
        /* "optimizer_inliner_dynamic_reference/input.sol":160:215  function a() public pure returns (uint) { return f(); } */
    tag_15:
      swap1
      jump	// out
        /* "optimizer_inliner_dynamic_reference/input.sol":246:305  function h() public view returns (uint) { return x() + 1; } */
    tag_11:
        /* "optimizer_inliner_dynamic_reference/input.sol":280:284  uint */
      0x00
        /* "optimizer_inliner_dynamic_reference/input.sol":295:298  x() */
      tag_19
        /* "optimizer_inliner_dynamic_reference/input.sol":295:296  x */
      0x00
      0x00
      swap1
      sload
      swap1
      0x0100
      exp
      swap1
      div
      dup1
      iszero
      tag_20
      mul
      or
      0xffffffffffffffff
      and
        /* "optimizer_inliner_dynamic_reference/input.sol":295:298  x() */
      0xffffffff
      and
      dup1
      tag_17
      eq
      tag_21
      jumpi
      tag_22
      tag_23
      jump	// in
    tag_22:
    tag_21:
      pop
      tag_17
      jump	// in
    tag_19:
        /* "optimizer_inliner_dynamic_reference/input.sol":301:302  1 */
      0x01
        /* "optimizer_inliner_dynamic_reference/input.sol":295:302  x() + 1 */
      tag_24
      swap2
      swap1
      tag_25
      jump	// in
    tag_24:
        /* "optimizer_inliner_dynamic_reference/input.sol":288:302  return x() + 1 */
      swap1
      pop
      jump(tag_18)
        /* "optimizer_inliner_dynamic_reference/input.sol":246:305  function h() public view returns (uint) { return x() + 1; } */
    tag_18:
      swap1
      jump	// out
        /* "optimizer_inliner_dynamic_reference/input.sol":125:155  function g() public { x = f; } */
    tag_14:
        /* "optimizer_inliner_dynamic_reference/input.sol":151:152  f */
      tag_17
        /* "optimizer_inliner_dynamic_reference/input.sol":147:148  x */
      0x00
      0x00
        /* "optimizer_inliner_dynamic_reference/input.sol":147:152  x = f */
      0x0100
      exp
      dup2
      sload
      dup2
      0xffffffffffffffff
      mul
      not
      and
      swap1
      dup4
      0xffffffffffffffff
      and
      mul
      or
      swap1
      sstore
      pop
        /* "optimizer_inliner_dynamic_reference/input.sol":125:155  function g() public { x = f; } */
    tag_26:
      jump	// out
        /* "optimizer_inliner_dynamic_reference/input.sol":310:365  function f() internal pure returns (uint) { return 6; } */
    tag_17:
        /* "optimizer_inliner_dynamic_reference/input.sol":346:350  uint */
      0x00
        /* "optimizer_inliner_dynamic_reference/input.sol":361:362  6 */
      0x06
        /* "optimizer_inliner_dynamic_reference/input.sol":354:362  return 6 */
      swap1
      pop
      jump(tag_27)
        /* "optimizer_inliner_dynamic_reference/input.sol":310:365  function f() internal pure returns (uint) { return 6; } */
    tag_27:
      swap1
      jump	// out
    tag_20:
      tag_28
      tag_23
      jump	// in
    tag_28:
      jump	// out
        /* "#utility.yul":14:191   */
      jump(tag_29)
    tag_9:
        /* "#utility.yul":106:110   */
      0x00
        /* "#utility.yul":148:150   */
      0x20
        /* "#utility.yul":137:146   */
      dup3
        /* "#utility.yul":133:151   */
      add
        /* "#utility.yul":125:151   */
      swap1
      pop
        /* "#utility.yul":178:184   */
      dup3
        /* "#utility.yul":167:176   */
      dup3
        /* "#utility.yul":160:185   */
      mstore
        /* "#utility.yul":14:191   */
    tag_30:
      swap3
      swap2
      pop
      pop
      jump	// out
        /* "#utility.yul":196:323   */
    tag_23:
        /* "#utility.yul":257:267   */
      0x4e487b71
        /* "#utility.yul":252:255   */
      0xe0
        /* "#utility.yul":248:268   */
      shl
        /* "#utility.yul":245:246   */
      0x00
        /* "#utility.yul":238:269   */
      mstore
        /* "#utility.yul":288:292   */
      0x51
        /* "#utility.yul":285:286   */
      0x04
        /* "#utility.yul":278:293   */
      mstore
        /* "#utility.yul":312:316   */
      0x24
        /* "#utility.yul":309:310   */
      0x00
        /* "#utility.yul":302:317   */
      revert
        /* "#utility.yul":196:323   */
    tag_31:
      jump	// out
        /* "#utility.yul":328:550   */
    tag_25:
        /* "#utility.yul":368:371   */
      0x00
        /* "#utility.yul":400:401   */
      dup3
        /* "#utility.yul":397:398   */
      dup3
        /* "#utility.yul":393:402   */
      add
        /* "#utility.yul":386:402   */
      swap1
      pop
        /* "#utility.yul":420:423   */
      dup1
        /* "#utility.yul":417:418   */
      dup3
        /* "#utility.yul":414:424   */
      gt
        /* "#utility.yul":411:544   */
      iszero
      tag_33
      jumpi
        /* "#utility.yul":466:476   */
      0x4e487b71
        /* "#utility.yul":461:464   */
      0xe0
        /* "#utility.yul":457:477   */
      shl
        /* "#utility.yul":454:455   */
      0x00
        /* "#utility.yul":447:478   */
      mstore
        /* "#utility.yul":501:505   */
      0x11
        /* "#utility.yul":498:499   */
      0x04
        /* "#utility.yul":491:506   */
      mstore
        /* "#utility.yul":529:533   */
      0x24
        /* "#utility.yul":526:527   */
      0x00
        /* "#utility.yul":519:534   */
      revert
        /* "#utility.yul":411:544   */
    tag_33:
        /* "#utility.yul":328:550   */
    tag_32:
      swap3
      swap2
      pop
      pop
      jump	// out
    tag_29:

    auxdata: <AUXDATA REMOVED>
}
