// RUN: solc --yul --mlir %s | FileCheck %s
// RUN: solc --yul --mlir --mmlir --mlir-print-debuginfo %s | FileCheck --check-prefix=DBG %s

{
  mstore(0, 42)
  return(0, 0)
}
// NOTE: Assertions have been autogenerated by test/updFileCheckTest.py
// CHECK: module {
// CHECK-NEXT:   solidity.yul_block {
// CHECK-NEXT:     solidity.yul_block {
// CHECK-NEXT:       %c0_i256 = arith.constant 0 : i256
// CHECK-NEXT:       %c42_i256 = arith.constant 42 : i256
// CHECK-NEXT:       "solidity.mstore"(%c0_i256, %c42_i256) : (i256, i256) -> ()
// CHECK-NEXT:       %c0_i256_0 = arith.constant 0 : i256
// CHECK-NEXT:       %c0_i256_1 = arith.constant 0 : i256
// CHECK-NEXT:       "solidity.return"(%c0_i256_0, %c0_i256_1) : (i256, i256) -> ()
// CHECK-NEXT:     }
// CHECK-NEXT:   }
// CHECK-NEXT: }
// DBG: module {
// DBG-NEXT:   solidity.yul_block {
// DBG-NEXT:     solidity.yul_block {
// DBG-NEXT:       %c0_i256 = arith.constant 0 : i256 loc(#loc2)
// DBG-NEXT:       %c42_i256 = arith.constant 42 : i256 loc(#loc3)
// DBG-NEXT:       "solidity.mstore"(%c0_i256, %c42_i256) : (i256, i256) -> () loc(#loc4)
// DBG-NEXT:       %c0_i256_0 = arith.constant 0 : i256 loc(#loc5)
// DBG-NEXT:       %c0_i256_1 = arith.constant 0 : i256 loc(#loc6)
// DBG-NEXT:       "solidity.return"(%c0_i256_0, %c0_i256_1) : (i256, i256) -> () loc(#loc7)
// DBG-NEXT:     } loc(#loc1)
// DBG-NEXT:   } loc(#loc1)
// DBG-NEXT: } loc(#loc0)
// DBG-NEXT: #loc0 = loc(unknown)
// DBG-NEXT: #loc1 = loc({{.*}}:3:0)
// DBG-NEXT: #loc2 = loc({{.*}}:4:9)
// DBG-NEXT: #loc3 = loc({{.*}}:4:12)
// DBG-NEXT: #loc4 = loc({{.*}}:4:2)
// DBG-NEXT: #loc5 = loc({{.*}}:5:9)
// DBG-NEXT: #loc6 = loc({{.*}}:5:12)
// DBG-NEXT: #loc7 = loc({{.*}}:5:2)
